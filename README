1. TODO
	1. Is there a need for additional documentation of inmemorydb.cc, inmemorydb.h
		and in_memory_server.cc?
	2. Look over naming conventions
			CamelCase is currently used for classes and structs.
			snake_case or camelCase for functions?
	3. Look over DatabaseInterface to ensure that it is truly independent of
		the messaging protocol
			Possible problem: the interface is too close to the messaging protocol, especially
			the list_newsgroups and list_articles functions; namely how the lists are sorted.
	4. Implement client
	5. Implement disk server

2. Struktur

edaf50-project/
	I den här mappen ligger den här README-filen, projektbeskrivningen (cppproject.pdf)
	samt två testprogram (TestServer1.jar och TestServer2.jar).

edaf50-project/clientserver
	Här ligger all "riktig" kod.
	
	Kod som vi har skrivit:
		article.cc,
		article.h,
		databaseinterface.h,
		inmemorydb.cc,
		inmemorydb.h,
		in_memory_server.cc,
		messagehandler.cc,
		messagehandler.h,
		newsgroup.cc,
		newsgroup.h,
		nosucharticleexception.h,
		nosuchnewsgroupexception.h,
		serverhelpfunctions.cc,
		serverhelpfunctions.h
	
	Given kod:
		connection.cc,
		connection.h,
		connectionclosedexception.h,
		protocol.h,
		server.cc,
		server.h
	

edaf50-project/clientserver/test
	Här ligger lite given exempelkod, samt två program som testar funktionaliteten i MessageHandler.
	
	Kod som vi har skrivit:
		test_mh_client.cc
		test_mh_server.cc
	
	Given kod:
		myclient.cc
		myserver.cc

3. Status

in_memory_server.cc ser ut att vara klar, iallafall enligt TestServer2.jar.

Testa så här:

	Ifrån /edaf50-project/ kör de följande kommandona i var sin terminal:
	
		clientserver/in_memory_server 1234
		
		java -jar TestServer2.jar localhost 1234
